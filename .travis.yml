language: generic
<<<<<<< HEAD
dist: xenial
sudo: false

=======
sudo: false
>>>>>>> Updated this old code to fork
branches:
  except:
  - ___TGS3TempBranch
  - ___TGSTempBranch
<<<<<<< HEAD

matrix:
  include:
    - name: "Run Linters"
=======
matrix:
  include:
    - env:
      - BUILD_TOOLS=true
      name: "Build Tools"
>>>>>>> Updated this old code to fork
      addons:
        apt:
          packages:
            - python3
            - python3-pip
<<<<<<< HEAD
            - python3-setuptools
      install:
        - tools/travis/install_build_tools.sh
        - tools/travis/install_spaceman_dmm.sh dreamchecker
      script:
        - tools/travis/check_filedirs.sh tgstation.dme
        - tools/travis/check_changelogs.sh
        - find . -name "*.php" -print0 | xargs -0 -n1 php -l
        - find . -name "*.json" -not -path "./tgui/node_modules/*" -print0 | xargs -0 python3 ./tools/json_verifier.py
        - tools/travis/build_tgui.sh
        - tools/travis/check_grep.sh
        - ~/dreamchecker

    - name: "Compile All Maps"
=======
      cache:
        directories:
          - tgui/node_modules
    - env:
      - BUILD_TESTING=true
      - BUILD_TOOLS=false
      name: "Build All Maps"
>>>>>>> Updated this old code to fork
      addons:
        apt:
          packages:
            - libstdc++6:i386
      cache:
        directories:
          - $HOME/BYOND
<<<<<<< HEAD
      install:
        - tools/travis/install_byond.sh
        - source $HOME/BYOND/byond/bin/byondsetup
      before_script:
        - tools/travis/template_dm_generator.py
      script:
        - tools/travis/dm.sh -DTRAVISBUILDING -DTRAVISTESTING -DALL_MAPS tgstation.dme

    - name: "Compile and Run Tests"
=======
    - env:
      - BUILD_TESTING=false
      - BUILD_TOOLS=false
      name: "Build and Run Unit Tests"
>>>>>>> Updated this old code to fork
      addons:
        mariadb: '10.2'
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - libstdc++6:i386
<<<<<<< HEAD
            - gcc-multilib
            - g++-7
            - g++-7-multilib
            - libmariadb-client-lgpl-dev:i386
            - libmariadbd-dev
      cache:
        directories:
          - $HOME/BYOND
          - $HOME/libmariadb
      install:
        - tools/travis/install_byond.sh
        - source $HOME/BYOND/byond/bin/byondsetup
        - tools/travis/install_libmariadb.sh
        - tools/travis/install_rust_g.sh
      before_script:
        - mysql -u root -e 'CREATE DATABASE tg_travis;'
        - mysql -u root tg_travis < SQL/tgstation_schema.sql
        - mysql -u root -e 'CREATE DATABASE tg_travis_prefixed;'
        - mysql -u root tg_travis_prefixed < SQL/tgstation_schema_prefixed.sql
        - tools/travis/build_bsql.sh
      script:
        - tools/travis/dm.sh -DTRAVISBUILDING tgstation.dme || travis_terminate 1
        - tools/travis/run_server.sh

    - name: "Generate Documentation"
      # Only run for non-PR commits to the real master branch.
      if: branch = master AND head_branch IS blank
      install:
        - tools/travis/install_spaceman_dmm.sh dmdoc
      before_script:
        # Travis checks out a hash, try to get back on a branch.
        - git checkout $TRAVIS_BRANCH || true
      script:
        - ~/dmdoc
        - touch dmdoc/.nojekyll
      deploy:
        provider: pages
        skip_cleanup: true
        local_dir: dmdoc
        github_token: $DMDOC_GITHUB_TOKEN
        fqdn: codedocs.tgstation13.org
=======
            - libssl-dev:i386
            - gcc-multilib
            - g++-7
            - g++-7-multilib
            - libmariadbclient-dev:i386
      cache:
        directories:
          - $HOME/.cargo
          - $HOME/BYOND
          - $HOME/MariaDB
          - $HOME/.rustup

install:
  - tools/travis/install_build_tools.sh
  - if [ $BUILD_TOOLS = false ] && [ $BUILD_TESTING = false ]; then mysql -u root -e 'CREATE DATABASE tg_travis;'; fi
  - if [ $BUILD_TOOLS = false ] && [ $BUILD_TESTING = false ]; then mysql -u root tg_travis < SQL/tgstation_schema.sql; fi
  - if [ $BUILD_TOOLS = false ] && [ $BUILD_TESTING = false ]; then mysql -u root -e 'CREATE DATABASE tg_travis_prefixed;'; fi
  - if [ $BUILD_TOOLS = false ] && [ $BUILD_TESTING = false ]; then mysql -u root tg_travis_prefixed < SQL/tgstation_schema_prefixed.sql; fi

before_script:
  - tools/travis/before_build_tools.sh
  - tools/travis/before_build_byond.sh

script:
  - tools/travis/check_filedirs.sh tgstation.dme
  - tools/travis/build_tools.sh || travis_terminate 1
  - tools/travis/build_dependencies.sh || travis_terminate 1
  - tools/travis/build_byond.sh

>>>>>>> Updated this old code to fork
