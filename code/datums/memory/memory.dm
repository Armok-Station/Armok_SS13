///little tidbits of past events generated by the player doing things. can be used in engravings, dreams, and changeling succs.
///all of those things are supposed to be taken vaguely (engravings crossround and should not include names, dreams and succs are memory goop)
///and as such the generated text of the memory is vague. also, no references held so hard delling isn't an issue, thank god
/datum/memory
	///job of the person performing the event
	var/performer
	///the action done to the target, see memory.dm in _DEFINES
	var/action
	///whatever the action was done to, if it's a person it's their job name!
	var/target

	///mood of the person performing the event when they did it. changes the description.
	var/mood

/datum/memory/New(performer, action, target, mood)
	. = ..()
	src.performer = performer
	src.action = action
	src.target = target
	src.mood = mood

/datum/memory/proc/generate_story(story_type, story_flags)
	var/list/story_pieces = list()

	//story type dependent strings (engraving art)
	var/list/forewords = strings(MEMORY_FILE, story_type + "_forewords")
	var/list/somethings = strings(MEMORY_FILE, story_type + "_somethings")
	var/list/styles = strings(MEMORY_FILE, story_type + "_styles")

	var/list/randoms = somethings + styles

	//story action strings (surgery)
	var/list/story_starts = strings(MEMORY_FILE, action + "_starts")
	var/list/story_moods = strings(MEMORY_FILE, action + "_moods")

	var/tone_down_the_randomness = FALSE

	story_pieces.Add(pick(forewords), pick(story_starts))
	if(prob(25))
		var/random = pick(randoms)
		story_pieces.Add(random)
		if(random in styles)
			randoms -= styles
		tone_down_the_randomness = TRUE
	story_pieces.Add(pick(story_moods))
	if(prob(tone_down_the_randomness ? 30 : 70))
		story_pieces.Add(pick(randoms))

	if(story_flags & STORY_FLAG_DATED)
		story_pieces.Add("This took place in [GLOB.year_integer+540].")

	return story_pieces.Join(" ")
