<script>
	import { act } from 'util/byond'
	component.exports = {
		oninit () {
			this.on({
				editName (event) {
					var chemIndex = event.context.params.chemIndex
					var chemStoreNames = this.get('data.chemStoreNames')
					this.set({
						editingIndex: chemIndex,
						editingName: ((chemStoreNames.length >= chemIndex && chemStoreNames[chemIndex]) || "Slot "+(chemIndex+1))
					})
				},
				submitName (event) {
					var newName = this.get('editingName')
					var sanitizedName = newName.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;')
					var store = this.get('editingIndex')+1
					act(this.get('config.ref'), 'storename', {'store': store, 'name': sanitizedName})
					this.set('editingIndex', null)
				},
				inputFocus (event) {
					event.node.select()
				}
			})
		},
		data: {
			editingIndex: null,
			editingName: "",
		}
	}
</script>
<ui-display title='Occupant'>
	<ui-section label='Occupant'>
		<span>{{data.occupant.name ? data.occupant.name : "No Occupant"}}</span>
	</ui-section>
	{{#if data.occupied}}
		<ui-section label='State'>
			<span class='{{data.occupant.statstate}}'>{{data.occupant.stat}}</span>
			{{#if data.occupant.stasis}}
				<span class='highlight'>In Stasis</span>
			{{/if}}
		</ui-section>
		<ui-section label='Health'>
			<ui-bar min='{{data.occupant.minHealth}}' max='{{data.occupant.maxHealth}}' value='{{data.occupant.health}}'
				state='{{data.occupant.health >= 0 ? "good" : "average"}}'>{{Math.round(adata.occupant.health)}}</ui-bar>
		</ui-section>
		{{#each [{label: "Brute", type: "bruteLoss"}, {label: "Respiratory", type: "oxyLoss"}, {label: "Toxin", type: "toxLoss"}, {label: "Burn", type: "fireLoss"}]}}
			<ui-section label='{{label}}'>
				<ui-bar min='0' max='{{data.occupant.maxHealth}}' value='{{data.occupant[type]}}' state='bad'>{{Math.round(adata.occupant[type])}}</ui-bar>
			</ui-section>
		{{/each}}
		<ui-section label='Cells'>
				<span class='{{data.occupant.cloneLoss ? "bad" : "good"}}'>{{data.occupant.cloneLoss ? "Damaged" : "Healthy"}}</span>
		</ui-section>
		<ui-section label='Brain'>
				<span class='{{data.occupant.brainLoss ? "bad" : "good"}}'>{{data.occupant.brainLoss ? "Abnormal" : "Healthy"}}</span>
		</ui-section>
		<ui-section label='Bloodstream'>
				{{#each adata.occupant.reagents}}
					<span class='highlight' intro-outro='fade'>{{Math.fixed(volume, 1)}} units of {{name}}</span><br/>
				{{else}}
					<span class='good'>Pure</span>
				{{/each}}
		</ui-section>
	{{/if}}
</ui-display>
<ui-display title='Controls'>
	<ui-section label='Door'>
	<ui-button icon='{{data.open ? "unlock" : "lock"}}' action='door'>{{data.open ? "Open" : "Closed"}}</ui-button>
	</ui-section>
	<ui-section label='Stasis'>
		<ui-button icon='power-off' style='{{data.stasisEnabled && "selected"}}' action='togglestasis'>{{data.stasisEnabled ? "Enabled" : "Disabled"}}</ui-button>{{#if data.stasisEnabled && data.occupied}}<span class='good'>Active</span>{{/if}}
	</ui-section>
	{{#if data.chems.length || data.chemStores.length}}
	<ui-section label='Inject'>
		{{#each data.chems}}
			<ui-button icon='flask' state='{{data.occupied ? null : "disabled"}}' action='inject' params='{"chem": "{{id}}"}'>{{name}}</ui-button><br/>
		{{/each}}
	{{#each data.chemStores:chemIndex}}
		<ui-button icon='{{data.selectedStore == (chemIndex+1) ? "check-square-o" : "square-o"}}' style='{{data.selectedStore == (chemIndex+1) && "selected"}}' action='invstore' params='{"store": "{{chemIndex+1}}"}'></ui-button>
		{{#if editingIndex == chemIndex}}
			<input type='text' value='{{editingName}}' id='storeNameInput' on-enter-blur='submitName' on-focus='inputFocus' autofocus/>
		{{else}}
			<ui-button icon='flask' state='{{(!this || !data.occupied) && "disabled"}}' action='injectstore' params='{"store": "{{chemIndex+1}}"}'>{{((data.chemStoreNames.length >= (chemIndex+1)) && data.chemStoreNames[chemIndex]) || "Slot "+(chemIndex+1)}}</ui-button>
		{{/if}}
		<ui-button icon='pencil' on-press='editName' params='{"chemIndex": {{chemIndex}}}'></ui-button>
		<ui-button icon='eject' action='ejectstore' params='{"store": "{{chemIndex+1}}"}' state='{{this === null && "disabled"}}'></ui-button>
		<span class='{{this === null && "bad"}}'>	{{(this !== null) ? (Math.fixed(this, 1)+" units") : "Missing"}}</span><br/>
	{{/each}}
	</ui-section>
	{{/if}}
</ui-display>
