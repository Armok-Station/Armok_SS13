/// Adds threats to the list and notifies players
/obj/machinery/quantum_server/proc/add_threats(mob/living/threat)
	domain_threats += 1
	spawned_threat_refs.Add(WEAKREF(threat))
	SEND_SIGNAL(src, COMSIG_BITRUNNER_THREAT_CREATED)

/// Choses which antagonist role is spawned based on threat
/obj/machinery/quantum_server/proc/get_antagonist_role()
	var/list/roles = list(ROLE_CYBER_POLICE)

	if(threat >= 100)
		roles += list(ROLE_CYBER_TACTICAL)

	return pick(roles)

/// Polls for a ghost that wants to run it
/obj/machinery/quantum_server/proc/get_ghost_mind(role_name)
	var/list/mob/dead/observer/ghosties = poll_ghost_candidates("A short term antagonist role is available. Would you like to spawn as a [role_name]?", role_name)

	if(!length(ghosties))
		return

	shuffle_inplace(ghosties)

	var/mob/dead/selected = pick(ghosties)

	var/datum/mind/player_mind = new /datum/mind(selected.key)
	player_mind.active = TRUE

	return player_mind

/// Gets all mobs originally generated by the loaded domain and returns a list that are capable of being antagged
/obj/machinery/quantum_server/proc/get_valid_domain_targets()
	// A: No one is playing
	// B: The domain is not loaded
	// C: The domain is shutting down
	// D: There are no mobs
	if(!length(avatar_connection_refs) || isnull(generated_domain) || !is_ready || !is_operational || !length(mutation_candidate_refs))
		return list()

	for(var/datum/weakref/creature_ref as anything in mutation_candidate_refs)
		var/mob/living/creature = creature_ref.resolve()
		if(isnull(creature) || creature.mind)
			mutation_candidate_refs.Remove(creature_ref)

	return shuffle(mutation_candidate_refs)

/// Finds any mobs with minds in the zones and gives them the bad news
/obj/machinery/quantum_server/proc/notify_spawned_threats()
	for(var/datum/weakref/baddie_ref as anything in spawned_threat_refs)
		var/mob/living/baddie = baddie_ref.resolve()
		if(isnull(baddie) || baddie.stat >= UNCONSCIOUS || isnull(baddie.mind))
			continue

		baddie.throw_alert(
			ALERT_BITRUNNER_RESET,
			/atom/movable/screen/alert/bitrunning/qserver_threat_deletion,
			new_master = src,
		)

		to_chat(baddie, span_userdanger("You have been flagged for deletion! Thank you for your service."))

/// Spawns an antagonist
/obj/machinery/quantum_server/proc/spawn_glitch()
	var/list/mutation_candidates = get_valid_domain_targets()
	if(!length(mutation_candidates))
		return

	var/chosen = pick(mutation_candidates)
	if(isnull(chosen))
		return

	var/datum/weakref/target_ref = pick(mutation_candidates)
	var/mob/living/mutation_target = target_ref.resolve()

	if(isnull(mutation_target)) // just in case
		mutation_candidates.Remove(target_ref)
		target_ref = pick(mutation_candidates)
		mutation_target = target_ref.resolve()
		if(isnull(mutation_target))
			return

	var/chosen_role = get_antagonist_role()

	var/datum/mind/ghost_mind = get_ghost_mind(chosen_role)
	if(isnull(ghost_mind))
		return

	var/mob/living/antag_mob
	switch(chosen_role)
		if(ROLE_CYBER_POLICE)
			antag_mob = spawn_cybercop(mutation_target, ghost_mind)

	playsound(antag_mob, 'sound/magic/ethereal_exit.ogg', 50, TRUE, -1)
	message_admins("[ADMIN_LOOKUPFLW(antag_mob)] has been made into virtual antagonist by an event.")
	antag_mob.log_message("was spawned as a virtual antagonist by an event.", LOG_GAME)

	add_threats(antag_mob)

/// Spawns a cybercop on the mutation target
/obj/machinery/quantum_server/proc/spawn_cybercop(mob/living/mutation_target, datum/mind/player_mind)
	var/mob/living/carbon/human/new_agent = new(mutation_target.loc)
	mutation_target.gib(DROP_ALL_REMAINS)
	mutation_target = null

	player_mind.transfer_to(new_agent)
	player_mind.set_assigned_role(SSjob.GetJobType(/datum/job/cyber_police))
	player_mind.special_role = ROLE_CYBER_POLICE
	player_mind.add_antag_datum(/datum/antagonist/bitrunning_glitch/cyber_police)

	return new_agent

/// Oh boy - transports the antag station side
/obj/machinery/quantum_server/proc/station_spawn(mob/living/antag)

