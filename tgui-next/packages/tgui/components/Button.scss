@mixin button-color($color) {
  transition: background-color 50ms;
  background-color: $color;

  // Adapt button color to background luminance to ensure high contast
  @if luminance($color) > 0.4 {
    color: #000000;
  }
  @else {
    color: #ffffff;
  }

  &:not(.Button--disabled):hover {
    transition: background-color 0ms;
  }

  &:not(.Button--disabled):focus {
    transition: background-color 100ms;
  }

  &:not(.Button--disabled):hover,
  &:not(.Button--disabled):focus {
    background-color: lighten($color, $button-lighten-hover);
  }
}

.Button {
  display: inline-block;
  vertical-align: middle;
  min-height: 20px;
  line-height: 17px;
  padding: 1px 6px;
  margin-right: 2px;
  white-space: nowrap;
  border: 1px solid $button-color-border;
  outline: 0;
  // Disable selection in buttons
  user-select: none;
  -ms-user-select: none;

  &:last-child {
    margin-right: 0;
  }
}

.Button--hasContent {
  // Add a margin to the icon to keep it separate from the text
  .fa {
    margin-right: 6px;
  }
}

.Button--fluid {
  display: block;
  margin-left: 0;
  margin-right: 0;
  padding: 3px 6px;
}

.Button--color--normal {
  @include button-color($button-color-normal);
}

.Button--color--caution {
  @include button-color($button-color-caution);
}

.Button--color--danger {
  @include button-color($button-color-danger);
}

.Button--disabled {
  @include button-color($button-color-disabled);
}

.Button--selected {
  @include button-color($button-color-selected);
}
